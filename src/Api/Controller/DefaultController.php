<?php
/**
 * Created by PhpStorm.
 * User: MojmÃ­r Odehnal <mojmir.odehnal@centrum.cz>
 * Date: 20.06.2018
 * Time: 18:01
 */

namespace App\Api\Controller;

use ApiPlatform\Core\Api\OperationType;
use ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface;
use ApiPlatform\Core\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface;
use ApiPlatform\Core\PathResolver\OperationPathResolverInterface;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class DefaultController extends Controller
{
    /**
     * @Route("/api/client")
     */
    public function client(ResourceNameCollectionFactoryInterface $nameCollectionFactory,
                           ResourceMetadataFactoryInterface $metadataFactory,
                           OperationPathResolverInterface $pathResolver)
    {
        $resourcesStrArr = [];
        $resourceClasses = $nameCollectionFactory->create();
        foreach($resourceClasses as $index =>$resourceClass) {
            $metadata = $metadataFactory->create($resourceClass);
            $name = preg_replace('/^([\w\d_]+)(?:Dto|DTO)$/', '$1', $metadata->getShortName());
            $res = "  $name: {\n";
            $ops = [];
            foreach($metadata->getCollectionOperations()?:[] as $opName => $op) {
                if($opName === 'get') $opName = 'getAll';
                if($opName === 'post') $opName = 'postNew';
                preg_match_all('/[\w\d]+/', $opName, $matches, PREG_PATTERN_ORDER);
                $opName = $matches[0][0];
                if(count($matches[0]) > 1) {
                    foreach(array_slice($matches[0], 1) as $namePart) $opName .= ucfirst($namePart);
                }
                if(empty($op['path'])) {
                    $op['path'] = $pathResolver->resolveOperationPath($metadata->getShortName(), $op, OperationType::COLLECTION);
                    $op['path'] = str_replace('.{_format}', '', $op['path']);
                }
                $ops[$opName] = $op;

            }
            foreach($metadata->getItemOperations()?:[] as $opName => $op) {
                preg_match_all('/[\w\d]+/', $opName, $matches, PREG_PATTERN_ORDER);
                $opName = $matches[0][0];
                if(count($matches[0]) > 1) {
                    foreach(array_slice($matches[0], 1) as $namePart) $opName .= ucfirst($namePart);
                }
                if(isset($ops[$opName])) $opName .= 'One';
                if(empty($op['path'])) {
                    $op['path'] = $pathResolver->resolveOperationPath($metadata->getShortName(), $op, OperationType::ITEM);
                    $op['path'] = str_replace('.{_format}', '', $op['path']);
                }
                $ops[$opName] = $op;
            }
            foreach($metadata->getSubresourceOperations()?:[] as $opName => $op) {
                preg_match_all('/[\w\d]+/', $opName, $matches, PREG_PATTERN_ORDER);
                $opName = $matches[0][0];
                if(count($matches[0]) > 1) {
                    foreach(array_slice($matches[0], 1) as $namePart) $opName .= ucfirst($namePart);
                }
                $opName .= $op['shortNames'][0];
                if(empty($op['path'])) {
                    $op['path'] = $pathResolver->resolveOperationPath($op['shortNames'][0], $op, OperationType::SUBRESOURCE);
                    $op['path'] = str_replace('.{_format}', '', $op['path']);
                }
                $ops[$opName] = $op;
            }
            $opsStrArr = [];
            foreach($ops as $opName => $op) {
                preg_match_all('/{([\w\d_]+)}/', $op['path'], $matches);
                $params = $matches[1];
                $opsStrArr[] = "    $opName: (". implode(', ', array_merge(['locale'], $params)) .") => apiPrefix + "
                    ."'". preg_replace('/{([\w\d_]+)}/', "' + $1 + '", $op['path']) ."?_locale=' + locale";
            }
            $res .= implode(",\n", $opsStrArr);
            $res .= "\n  }";
            $resourcesStrArr[] = $res;
        }
        $res = "// generated by script at path /api/client\n";
        $res .= "const apiPrefix = '/api';\n";
        $res .= "export default {\n";
        $res .= implode(",\n", $resourcesStrArr);
        $res .= "\n};\n";
        return new Response($res);
    }
}